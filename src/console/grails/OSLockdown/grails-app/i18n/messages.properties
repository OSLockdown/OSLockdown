default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]
default.invalid.url.message=Property [{0}] of class [{1}] with value [{2}] is not a valid URL
default.invalid.creditCard.message=Property [{0}] of class [{1}] with value [{2}] is not a valid credit card number
default.invalid.email.message=Property [{0}] of class [{1}] with value [{2}] is not a valid e-mail address
default.invalid.range.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]
default.invalid.size.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]
default.invalid.max.message=Property [{0}] of class [{1}] with value [{2}] exceeds maximum value [{3}]
default.invalid.min.message=Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]
default.invalid.max.size.message=Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]
default.invalid.min.size.message=Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]
default.invalid.validator.message=Property [{0}] of class [{1}] with value [{2}] does not pass custom validation
default.not.inlist.message=Property [{0}] of class [{1}] with value [{2}] is not contained within the list [{3}]
default.blank.message=Property [{0}] of class [{1}] cannot be blank
default.not.equal.message=Property [{0}] of class [{1}] with value [{2}] cannot equal [{3}]
default.null.message=Property [{0}] of class [{1}] cannot be null
default.not.unique.message=Property [{0}] of class [{1}] with value [{2}] must be unique

default.paginate.prev=Previous
default.paginate.next=Next
default.boolean.true=True
default.boolean.false=False
default.date.format=yyyy-MM-dd HH:mm:ss z
default.number.format=0

default.button.save.label=Save
default.button.edit.label=Edit
default.button.cancel.label=Cancel

# Data binding errors. Use "typeMismatch.$className.$propertyName to customize (eg typeMismatch.Book.author)
typeMismatch.java.net.URL=Property {0} must be a valid URL
typeMismatch.java.net.URI=Property {0} must be a valid URI
typeMismatch.java.util.Date=Property {0} must be a valid Date
typeMismatch.java.lang.Double=Property {0} must be a valid number
typeMismatch.java.lang.Integer=Property {0} must be a valid number
typeMismatch.java.lang.Long=Property {0} must be a valid number
typeMismatch.java.lang.Short=Property {0} must be a valid number
typeMismatch.java.math.BigDecimal=Property {0} must be a valid number
typeMismatch.java.math.BigInteger=Property {0} must be a valid number
typeMismatch.com.trustedcs.sb.web.pojo.Client.port=Client must have a port between 1 and 65536

# client errors
client.name.blank=Client name may not be blank
client.name.unique=Client name must be unique
client.name.maxSize.error=Client name must be at most {3} characters in length
client.hostAddress.blank=Client host address may not be blank
client.hostAddress.maxSize.error=Client host address must be at most {3} characters in length
client.description.maxSize.error=Client description must be at most {3} characters in length
client.location.maxSize.error=Client location must be at most {3} characters in length
client.contact.maxSize.error=Client contact must be at most {3} characters in length
client.port.min.error=Client port must be greater than {3}
client.port.max.error=Client port must be less than {3}
client.port.integer.error=Client port must be an integer
client.clear.tasks.error=Unable to clear tasks for client {0}
client.not.found=Client not found with id {0}
client.alreadyDetached=Client {0} is already detached
client.association.error=Client [{0}] is still a member of group [{1}]
client.update.task.error=Client [{0}] is unable to update task [{1}]
client.remove.task.error=Client [{0}] is unable to remove task [{1}]
client.update.tasks.error=Client [{0}] is unable to update its task list
client.verify.tasks.error=Client [{0}] is unable to verify its task list
client.limit.reached={0} Console client limit has already been reached. Please contact Forcepoint to upgrade your license.
client.licenseExpiration.reached=Lock and Release Console license has already expired on {0}. Please contact Forcepoint to upgrade your license.
client.nonUniqueNameAndPortCombination=The combination of client Name [{3}] and Port [{4}] should be unique.
client.bulk.clients.only=Lock and Release Console can only accept 'Lock and Release' clients.
client.cannot.register.bulk.clients={0} Console can not register 'Lock and Release' clients.
client.standalone.clients.only={0} Console can only register 'STANDALONE' clients.
proc.limit.reached={0} Console processor limit has already been reached for {1} processors. Please contact Forcepoint to upgrade your license.
client.type.unlicensed={0} Console license does not allow {1} clients. Please contact Forcepoint to upgrade your license.
proc.type.unlicensed={0} Console license does not allow {1} processors. Please contact Forcepoint to upgrade your license.
proc.type.unknown={0} Console license does not allow registration of unknown processor type.

# group errors
group.name.blank.error=Group name may not be blank
group.name.unique.error=Group name must be unique
group.name.maxSize.error=Group name must be at most {3} characters in length
group.description.maxSize.error=Group description must be at most {3} characters in length
group.remove.error=Group {0} cannot be deleted as it has at least one Client associated with it
group.remove.client.error=Client {0} unable to be removed from Group {1}
group.add.client.error=Client {0} unable to be added to Group {1}
group.remove.task.error=Task {0} unable to be removed from Group {1}
group.add.task.error=Task {0} unable to be added to Group {1}
group.not.found=Group not found with id {0}

# profile errors
profile.name.blank.error=Profile name may not be blank
profile.name.unique.error=Profile name must be unique
profile.name.maxSize.error=Profile name must be at most {3} characters in length
profile.not.found=Security Profile not found with id {0}
securityProfile.persist.error=Unable to save security profile to disk
securityProfile.delete.association.error=Groups have security profile {0} associated with it, thus it can not be deleted

# user errors
shiroUser.username.unique.error=Username must be unique
shiroUser.username.blank.error=Username can not be blank
rbac.password.current.error=Current password invalid.
rbac.password.reenter.error=Password does not match reentered password.
rbac.password.complexity.error=Password strength requires that the password be at least 6 characters and contain both a capital letter and a number.
rbac.admin.not.found=Unable to reset Administrator password: admin user not found
rbac.password.complexity.error.length=Password complexity: must be at least {0} character(s)
rbac.password.complexity.error.upper=Password complexity: must have at least {0} upper case characters(s)
rbac.password.complexity.error.lower=Password complexity: must have at least {0} lower case character(s)
rbac.password.complexity.error.number=Password complexity: must have at least {0} numeric character(s)
rbac.password.complexity.error.special=Password complexity: must have at least {0} special/punctuation character(s)
rbac.password.empty.forbidden=Users may not specify an empty password
rbac.password.aging.too.soon=Passwords can be changed at most every {0} day(s)
rbac.password.aging.password.already.used=Password has already been used
rbac.password.same.as.current=New Password same as current password


# metadata errors
commonPlatformEnumeration.productVersion.unique.error=Product version must be unique
compliancy.item.unique.error=Item must be unique

# client auto registration
clientRegistrationRequest.name=Name
clientRegistrationRequest.name.maxSize.error=Property [Name] of class [ClientRegistrationRequest] with value [{2}] exceeds the maximum size of [{3}]
clientRegistrationRequest.name.blank.error=Property [Name] of class [ClientRegistrationRequest] cannot be blank
clientRegistrationRequest.name.nullable.error=Property [Name] of class [ClientRegistrationRequest] cannot be null
clientRegistrationRequest.hostAddress=Host Address
clientRegistrationRequest.hostAddress.maxSize.error=Property [Host Address] of class [ClientRegistrationRequest] with value [{2}] exceeds the maximum size of [{3}]
clientRegistrationRequest.hostAddress.blank.error=Property [Host Address] of class [ClientRegistrationRequest] cannot be blank
clientRegistrationRequest.hostAddress.nullable.error=Property [Host Address] of class [ClientRegistrationRequest] cannot be null
clientRegistrationRequest.location=Location
clientRegistrationRequest.location.maxSize.error=Property [Location] of class [ClientRegistrationRequest] with value [{2}] exceeds the maximum size of [{3}]
clientRegistrationRequest.contact=Contact
clientRegistrationRequest.contact.maxSize.error=Property [Contact] of class [ClientRegistrationRequest] with value [{2}] exceeds the maximum size of [{3}]
clientRegistrationRequest.port=Port
clientRegistrationRequest.port.min.error=Property [Port] of class [ClientRegistrationRequest] with value [{2}] is less than minimum value [{3}]
clientRegistrationRequest.port.max.error=Property [Port] of class [ClientRegistrationRequest] with value [{2}] exceeds maximum value [{3}]
clientRegistrationRequest.port.nullable.error=Property [Port] of class [ClientRegistrationRequest] cannot be null
clientRegistrationRequest.timeStamp=Time Stamp
clientRegistrationRequest.timeStamp.nullable.error=Property [Time Stamp] of class [ClientRegistrationRequest] cannot be null
clientRegistrationRequest.not.found=Auto Registration Request not found with id {0}

# baseline metadata
baselineSubsection.name.nullable.error=Property [Name] of class [BaselineSubsection] cannot be null
baselineSubsection.name.blank.error=Property [Name] of class [BaselineSubsection] cannot be blank
baselineSubsection.optionType.nullable.error=Property [Option Type] of class [BaselineSubsection] cannot be null
baselineSubsection.optionType.blank.error=Property [Option Type] of class [BaselineSubsection] cannot be blank
baselineSubsection.pyModulePath.nullable.error=Property [Py Module Path] of class [BaselineSubsection] cannot be null
baselineSubsection.pyModulePath.blank.error=Property [Py Module Path] of class [BaselineSubsection] cannot be blank
baselineSubsection.description.nullable.error=Property [Description] of class [BaselineSubsection] cannot be null
baselineSubsection.description.blank.error=Property [Description] of class [BaselineSubsection] cannot be blank
baselineSubsection.reportSubtitle.nullable.error=Property [Report Subtitle] of class [BaselineSubsection] cannot be null
baselineSubsection.reportSubtitle.blank.error=Property [Report Subtitle] of class [BaselineSubsection] cannot be blank
baselineSubsection.storageSize.nullable.error=Property [Storage Size] of class [BaselineSubsection] cannot be null
baselineSubsection.storageSize.blank.error=Property [Storage Size] of class [BaselineSubsection] cannot be blank
baselineSubsection.avgSize.min.error=Property [Avg Size] of class [BaselineSubsection] with value [{2}] is less than minimum value [{3}]
baselineSubsection.avgSize.nullable.error=Property [Avg Size] of class [BaselineSubsection] cannot be null
baselineSubsection.systemLoadImpact.nullable.error=Property [System Load Impact] of class [BaselineSubsection] cannot be null
baselineSubsection.systemLoadImpact.blank.error=Property [System Load Impact] of class [BaselineSubsection] cannot be blank
baselineSubsection.forensicsImportance.nullable.error=Property [Forensic Importance] of class [BaselineSubsection] cannot be null
baselineSubsection.forensicsImportance.blank.error=Property [Forensic Importance] of class [BaselineSubsection] cannot be blank
baselineSubsection.helpId.nullable.error=Property [Help Id] of class [BaselineSubsection] cannot be null
baselineSubsection.helpId.blank.error=Property [Help Id] of class [BaselineSubsection] cannot be blank

# baseline profile
baselineProfile.label=Baseline Profile
baselineProfile.list.label=Baseline Profile List
baselineProfile.create.label=Create Baseline Profile
baselineProfile.show.label=Show > {0}
baselineProfile.edit.label=Edit > {0}
baselineProfile.loaded=Baseline Profile: [{0}] Loaded
baselineProfile.updated=Baseline Profile Updated
baselineProfile.saved=Baseline Profile Saved
baselineProfile.not.found=Baseline Profile not found with id {0}
baselineProfile.persist.error=Unable to save baseline profile to disk
baselineProfile.name.unique=Baseline Profile name must be unique
baselineProfile.name.maxSize.error=Baseline Profile name must be at most {3} characters in length
baselineProfile.delete.file.error=Unabled to delete baseline profile xml at {0}
baselineProfile.delete.association.error=Groups have baseline profile {0} associated with it, thus it can not be deleted
baselineProfile.baselineModules.minSize.error=A baseline profile requires at least one enabled baseline module
baselineProfile.baselineModules.nullable.error=A baseline profile requires at least one enabled baseline module

# dispatcher interaction
dispatcher.group.missing={0} does not have a group.
dispatcher.securityProfile.missing={0} in group {1} does not have a security profile.
dispatcher.baselineProfile.missing={0} in group {1} does not have a baseline profile.
dispatcher.scan.error={0} scan failure [{1}].
dispatcher.quickscan.error={0} quickscan failure [{1}].
dispatcher.apply.error={0} apply failure [{1}].
dispatcher.undo.error={0} undo failure [{1}].
dispatcher.baseline.error={0} baseline failure [{1}].
dispatcher.response.null={0} dispatcher failure [No response received].
dispatcher.method.missing.error={0}'s dispatcher requires an update.
dispatcher.method.autoupdate.missing={0}''s dispatcher doesn''t support AutoUpdate (older version) - See Administrator''s Guide for ''Manually Invoking Auto-Update on a Client''.
dispatcher.method.missing.baselineWithProfile={0} is executing a baseline but does not have the ability to use baseline profiles, please upgrade it.
dispatcher.abort.error={0} abort failure [{1}].
dispatcher.status.error=Unable to get dispatcher status on {0} [{1}]
dispatcher.status.parse.error=Unable to parse the dispatcher status response from {0}.
dispatcher.hostInfo.error=Unable to get host details on {0} [{1}]
dispatcher.hostInfo.parse.error=Unable to parse the host information response from {0}.
dispatcher.command.successful=Successful
dispatcher.command.failed=Failed
dispatcher.autoupdate.error={0} AutoUpdate failure [{1}].

# stand alone
standalone.securityProfile.missing=Security Policy incomplete please select a Security Profile.
standalone.baselineProfile.missing=Security Policy incomplete please select a Baseline Profile.
standalone.client.missing=Standalone Client Missing.
standalone.group.missing=Standalone Group Missing.

# reports interaction
reports.list.baselines.error={0} list baselines failure [{1}].
reports.list.assessments.error={0} list assessments failure [{1}].
reports.list.applies.error={0} list apply failure [{1}].
reports.list.undos.error={0} list undo failure [{1}].
reports.response.null={0} reports failure [No response received].
reports.response.body.null=Reports response from {0} body was empty.
reports.response.body.parse.error=Unable to parse the reports response from {0}.
reports.retrieve.assessment.error=Unable to retrieve assessment {1} from {0} [{2}]
reports.retrieve.baseline.error=Unable to retrieve baseline {1} from {0} [{2}]
reports.retrieve.apply.error=Unable to retrieve apply {1} from {0} [{2}]
reports.retrieve.undo.error=Unable to retrieve undo {1} from {0} [{2}]
reports.response.content.null=Reports response from {0} content was empty.
reports.persist.error=Unable to persist {1} from {0} to {2} [{3}].
reports.directory.error=Unable to create directory {0}.
reports.latestreport.error=Unable to get the latest {0} report. Please make sure to run the {0} action on this Client.

# ScheduledTask messages
scheduledTask.create=Create Scheduled Task
scheduledTask.edit=Edit Scheduled Task
scheduledTask.list=Scheduled Task List
scheduledTask.new=New Scheduled Task
scheduledTask.show=Show Scheduled Task
scheduledTask.created=ScheduledTask {0} created
scheduledTask.updated=ScheduledTask {0} updated
scheduledTask.deleted=ScheduledTask {0} deleted
scheduledTask.not.found=Scheduled Task not found with id {0}
scheduledTask.actions.blank=Task must have at least one action
scheduledTask.actions.null=Task must have at least one action
scheduledTask.group.nullable.error=Task must have a valid group
scheduledTask.hour.range.error=Task is outside hour range
scheduledTask.minute.range.error=Task is outside minute range

# logging
logging.retrieve.error=Unable to retrieve oslockdown.log from {0} [{1}]
logging.response.content.null=Logging response from {0} content was empty.
logging.persist.error=Unable to persist oslockdown.log from {0} to {1} [{2}].

# snapshot messages
database.snapshot.exported=Database exported to {0}

# processor errors
processor.name.blank=Processor name may not be blank
processor.name.unique=Processor name must be unique
processor.description.maxSize.error=Processor description must be at most {3} characters in length
processor.not.found=Processor not found with id {0}
processor.limit.reached={0} Console processor limit has already been reached. Please contact Forcepoint to upgrade your license.

# accountPreferences errors
accountPreferences.minDaysBetweenChanges.range.error=Minimum days between changes must be between {3} and {4} days
accountPreferences.maxDaysBetweenChanges.range.error=Maximum days between changes must be between {3} and {4} days
accountPreferences.numWarningDays.range.error=Number of warning days must be between changes must be between {3} and {4} days
accountPreferences.maxReuse.range.error=Password reuse limit must be between {3} and {4}.
accountPreferences.minDaysBeforeChange.must.be.less.than.maxDaysBeforeChange=Mininum days between changes must be less than maximum days between changes.
accountPreferences.numWarningDays.must.be.less.than.maxDaysBeforeChange=Number of warning days before changes must be less than maximum days before changes.
accountPreferences.show.warning.only.after.minDaysBeforeChange=Warning of required change must only happen after password is allowed to be changed.
accountPreferences.minimumLower.range.error=Minimum number of lowercase characters must be between {3} and {4}.
accountPreferences.minimumUpper.range.error=Minimum number of uppercase characters must be between {3} and {4}.
accountPreferences.minimumNumber.range.error=Minimum number of numerical characters must be between {3} and {4}.
accountPreferences.minimumSpecial.range.error=Minimum number of 'special' (or punctuation) characters must be between {3} and {4}.
accountPreferences.minimumLength.range.error=Minimum length of the password in characters must be between {3} and {4}.

